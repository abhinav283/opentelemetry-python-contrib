<<<<<<< HEAD
name: Contrib Repo Tests
=======
name: Core Repo Tests
>>>>>>> upstream/main

on:
  push:
    branches-ignore:
    - 'release/*'
  pull_request:
env:
<<<<<<< HEAD
  CORE_REPO_SHA: 84c0e4f38d4fcdb8c13fd3988469fbb8cda28150

jobs:
=======
  # Set variable to 'main' if your change will not affect Contrib.
  # Otherwise, set variable to the commit of your branch on
  # opentelemetry-python-contrib which is compatible with these Core repo
  # changes.
  CONTRIB_REPO_SHA: 2977f143df1d474735e8bdfecd91d92d534e80dc
  # This is needed because we do not clone the core repo in contrib builds anymore.
  # When running contrib builds as part of core builds, we use actions/checkout@v2 which
  # does not set an environment variable (simply just runs tox), which is different when
  # contrib builds are run directly from contrib (since test.yml is executed, which sets CORE_REPO_SHA)
  # The solution is to include CORE_REPO_SHA as part of THIS environment so it can be accessed
  # from within the contrib build.
  CORE_REPO_SHA: ${{ github.sha }}

jobs:
  build:
    env:
      # We use these variables to convert between tox and GHA version literals
      py37: 3.7
      py38: 3.8
      py39: 3.9
      py310: "3.10"
      py311: "3.11"
      pypy3: pypy-3.7
      RUN_MATRIX_COMBINATION: ${{ matrix.python-version }}-${{ matrix.package }}-${{
        matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # ensures the entire test matrix is run, even if one permutation fails
      matrix:
        python-version: [py37, py38, py39, py310, py311, pypy3]
        package:
          - "api"
          - "sdk"
          - "semantic-conventions"
          - "getting-started"
          - "opentracing-shim"
          - "opencensus-shim"
          - "exporter-jaeger-combined"
          - "exporter-jaeger-proto-grpc"
          - "exporter-jaeger-thrift"
          - "exporter-opencensus"
          - "exporter-otlp-proto-common"
          - "exporter-otlp-combined"
          - "exporter-otlp-proto-grpc"
          - "exporter-otlp-proto-http"
          - "exporter-prometheus"
          - "exporter-zipkin-combined"
          - "exporter-zipkin-proto-http"
          - "exporter-zipkin-json"
          - "protobuf"
          - "propagator-b3"
          - "propagator-jaeger"
        os: [ubuntu-20.04, windows-2019]
    steps:
    - name: Checkout Core Repo @ SHA - ${{ github.sha }}
      uses: actions/checkout@v2
    - name: Set up Python ${{ env[matrix.python-version] }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env[matrix.python-version] }}
        architecture: 'x64'
    - name: Install tox
      run: pip install tox==3.27.1 -U tox-factor
    - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
      uses: actions/cache@v2
      with:
        path: |
          .tox
          ~/.cache/pip
        key: v3-tox-cache-${{ env.RUN_MATRIX_COMBINATION }}-${{ hashFiles('tox.ini',
          'dev-requirements.txt') }}-core
    - name: Windows does not let git check out files with long names
      if: ${{ matrix.os == 'windows-2019'}}
      run: git config --system core.longpaths true
    - name: run tox
      run: tox -f ${{ matrix.python-version }}-${{ matrix.package }} -- -ra --benchmark-json=${{
        env.RUN_MATRIX_COMBINATION }}-benchmark.json
>>>>>>> upstream/main
  misc:
    strategy:
      fail-fast: false
      matrix:
<<<<<<< HEAD
        tox-environment: [ "docker-tests", "spellcheck", "lint", "docs", "generate" ]
    name: ${{ matrix.tox-environment }}
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout Contrib Repo @ SHA - ${{ github.sha }}
        uses: actions/checkout@v2
      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install tox
        run: pip install tox==3.27.1
      - name: Install libsnappy-dev
        if: ${{ matrix.tox-environment == 'lint' }}
        run: sudo apt-get install -y libsnappy-dev
      - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
        uses: actions/cache@v1
        with:
          path: |
            .tox
            ~/.cache/pip
          key: v7-misc-tox-cache-${{ matrix.tox-environment }}-${{ hashFiles('tox.ini', 'dev-requirements.txt', 'gen-requirements.txt', 'docs-requirements.txt') }}
      - name: run tox
        run: tox -e ${{ matrix.tox-environment }}
      - name: Ensure generated code is up to date
        if: matrix.tox-environment == 'generate'
        run: git diff --exit-code || (echo 'Generated code is out of date, please run "tox -e generate" and commit the changes in this PR.' && exit 1)
=======
        tox-environment: ["docker-tests-proto3", "docker-tests-proto4", "lint", "spellcheck",
          "docs", "mypy", "mypyinstalled", "tracecontext"]
    name: ${{ matrix.tox-environment }}
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Core Repo @ SHA - ${{ github.sha }}
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'
        architecture: 'x64'
    - name: Install tox
      run: pip install tox==3.27.1
    - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
      uses: actions/cache@v2
      with:
        path: |
          .tox
          ~/.cache/pip
        key: v3-tox-cache-${{ matrix.tox-environment }}-${{ hashFiles('tox.ini', 'dev-requirements.txt')
          }}-core
    - name: run tox
      run: tox -e ${{ matrix.tox-environment }}

  # Contrib unit test suite in order to ensure changes in core do not break anything in contrib.
  # We only run contrib unit tests on the oldest supported Python version (3.7) as running the same tests
  # on all versions is somewhat redundant.
  contrib-build:
    env:
      # We use these variables to convert between tox and GHA version literals
      py37: 3.7
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # ensures the entire test matrix is run, even if one permutation fails
      matrix:
        python-version: [py37]
        package:
          - "aiohttp-client"
          - "aiohttp-server"
          - "aiopg"
          - "aio-pika"
          - "asgi"
          - "asyncpg"
          - "aws-lambda"
          - "boto"
          - "boto3sqs"
          - "botocore"
          - "cassandra"
          - "celery"
          - "confluent-kafka"
          - "dbapi"
          - "django"
          - "elasticsearch"
          - "falcon"
          - "fastapi"
          - "flask"
          - "grpc"
          - "httpx"
          - "jinja2"
          - "kafka-python"
          - "logging"
          - "mysql"
          - "mysqlclient"
          - "pika"
          - "psycopg2"
          - "pymemcache"
          - "pymongo"
          - "pymysql"
          - "pyramid"
          - "redis"
          - "remoulade"
          - "requests"
          - "sklearn"
          - "sqlalchemy"
          - "sqlite3"
          - "starlette"
          - "system-metrics"
          - "tornado"
          - "tortoiseorm"
          - "urllib"
          - "urllib3"
          - "wsgi"
          - "prometheus-remote-write"
          - "richconsole"
        os: [ubuntu-20.04]
    steps:
    - name: Checkout Contrib Repo @ SHA - ${{ env.CONTRIB_REPO_SHA }}
      uses: actions/checkout@v2
      with:
        repository: open-telemetry/opentelemetry-python-contrib
        ref: ${{ env.CONTRIB_REPO_SHA }}
    - name: Checkout Core Repo @ SHA ${{ github.sha }}
      uses: actions/checkout@v2
      with:
        repository: open-telemetry/opentelemetry-python
        path: opentelemetry-python-core
    - name: Set up Python ${{ env[matrix.python-version] }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ env[matrix.python-version] }}
        architecture: 'x64'
    - name: Install tox
      run: pip install tox==3.27.1 -U tox-factor
    - name: Cache tox environment
        # Preserves .tox directory between runs for faster installs
      uses: actions/cache@v2
      with:
        path: |
          .tox
          ~/.cache/pip
        key: v3-tox-cache-${{ matrix.python-version }}-${{ matrix.package }}-${{ matrix.os
          }}-${{ hashFiles('tox.ini', 'dev-requirements.txt') }}-contrib
    - name: run tox
      run: tox -f ${{ matrix.python-version }}-${{ matrix.package }} -- -ra
>>>>>>> upstream/main
